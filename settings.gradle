pluginManagement {
    plugins {
        id "com.diffplug.spotless" version "6.21.0"
        id "com.github.johnrengelman.shadow" version "8.1.1"
        id "com.google.protobuf" version "0.9.4"
        id "com.gradle.enterprise" version "3.14.1"
        id "org.gradle.toolchains.foojay-resolver-convention" version "0.7.0"
    }
}

plugins {
    id("com.gradle.enterprise")
    id("org.gradle.toolchains.foojay-resolver-convention")
}

def gradleEnterpriseServer = "https://ge.opentelemetry.io"
def isCI = System.getenv("CI") != null
def geAccessKey = System.getenv("GRADLE_ENTERPRISE_ACCESS_KEY") ?: ""

// if GE access key is not given and we are in CI, then we publish to scans.gradle.com
def useScansGradleCom = isCI && geAccessKey.isEmpty()

if (useScansGradleCom) {
    gradleEnterprise {
        buildScan {
            termsOfServiceUrl = "https://gradle.com/terms-of-service"
            termsOfServiceAgree = "yes"
            uploadInBackground = !isCI
            publishAlways()

            capture {
                taskInputFiles = true
            }
        }
    }
} else {
    gradleEnterprise {
        server = gradleEnterpriseServer
        buildScan {
            uploadInBackground = !isCI

            publishIfAuthenticated()
            publishAlways()

            capture {
                taskInputFiles = true
            }
        }
    }
}

rootProject.name = "opentelemetry-java-examples"
include ":opentelemetry-examples-autoconfigure",
        ":opentelemetry-examples-http",
        ":opentelemetry-examples-jaeger",
        ":opentelemetry-examples-javaagent",
        ":opentelemetry-examples-log-appender",
        ":opentelemetry-examples-logging",
        ":opentelemetry-examples-metrics",
        ":opentelemetry-examples-micrometer-shim",
        ":opentelemetry-examples-otlp",
        ":opentelemetry-examples-prometheus",
        ":opentelemetry-examples-sdk-usage",
        ":opentelemetry-examples-telemetry-testing",
        ":opentelemetry-examples-zipkin",
        ":opentelemetry-examples-spring-native",
        ":opentelemetry-examples-kotlin-extension"

rootProject.children.each {
    it.projectDir = "$rootDir/" + it.name
            .replace("opentelemetry-examples-", "") as File
}
