plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.1.3'
}

description = 'OpenTelemetry Example for Telemetry Testing'
ext.moduleName = "io.opentelemetry.examples.telemetry-testing"

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

bootRun {
    mainClass.set 'io.opentelemetry.example.javagent.Application'
}

configurations {
    /*
    We create a separate gradle configuration to grab a published Otel instrumentation agent.
    We don't need the agent during development of this extension module.
    This agent is used only during integration test.
    */
    agent
}

bootJar {
    dependsOn(configurations.agent)
}

dependencies {
    implementation("io.opentelemetry:opentelemetry-api")
    implementation('io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:1.29.0')
    //spring modules
    implementation("org.springframework.boot:spring-boot-starter-web")
    testImplementation("org.springframework.boot:spring-boot-starter-test")

    testImplementation(enforcedPlatform("org.junit:junit-bom:5.10.0"))
    testImplementation('org.junit.jupiter:junit-jupiter-api')
    testImplementation('org.junit.jupiter:junit-jupiter-engine')
    testImplementation("org.mock-server:mockserver-netty:5.15.0:shaded")
    testImplementation("org.awaitility:awaitility:4.2.0")
    testImplementation("io.opentelemetry.proto:opentelemetry-proto:0.14.0-alpha")
    testImplementation("org.assertj:assertj-core:3.24.2")

    agent("io.opentelemetry.javaagent:opentelemetry-javaagent:1.29.0")
}

test {
    useJUnitPlatform()

    // Add opentelemetry Java Agent jar to JVM args
    // otel.exporter.otlp.protocol - the transport protocol to use on OTLP trace, metric, and log requests
    // otel.metric.export.interval - the interval, in milliseconds, between the start of two export attempts
    // More information: https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md
    jvmArgs "-javaagent:${configurations.agent.singleFile}", "-Dotel.exporter.otlp.protocol=http/protobuf", "-Dotel.metric.export.interval=5000"
}
