name: Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  gradle-wrapper-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: gradle/wrapper-validation-action@v1.1.0

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK for running Gradle
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean check shadowJar
          cache-read-only: ${{ github.event_name == 'pull_request' }}
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}

      - run: java -cp sdk-usage/build/libs/opentelemetry-examples-sdk-usage-0.1.0-SNAPSHOT-all.jar io.opentelemetry.sdk.example.ConfigureSpanProcessorExample

  # this is not a required check to avoid blocking pull requests if external links break
  markdown-link-check:
    uses: ./.github/workflows/reusable-markdown-link-check.yml

  required-status-check:
    needs:
      - gradle-wrapper-validation
      - build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - if: |
          needs.gradle-wrapper-validation.result != 'success' ||
          needs.build.result != 'success'
        run: exit 1
