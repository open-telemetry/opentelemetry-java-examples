name: Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up JDK for running Gradle
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: temurin
          java-version: 17

      - name: Set up gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4.4.2
        with:
          cache-read-only: ${{ github.event_name == 'pull_request' }}

      - name: Build
        run: ./gradlew clean check shadowJar

      - run: java -cp sdk-usage/build/libs/opentelemetry-examples-sdk-usage-0.1.0-SNAPSHOT-all.jar io.opentelemetry.sdk.example.ConfigureSpanProcessorExample

  test-declarative-configuration-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up JDK for running Gradle
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: temurin
          java-version: 17

      - name: Set up gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4.4.2
        with:
          cache-read-only: ${{ github.event_name == 'pull_request' }}

      - name: Run declarative-configuration
        working-directory: declarative-configuration
        run: |
          export OTEL_EXPERIMENTAL_CONFIG_FILE=$(pwd)/otel-sdk-config.yaml
          ../gradlew run

  # this is not a required check to avoid blocking pull requests if external links break
  markdown-link-check:
    uses: ./.github/workflows/reusable-markdown-link-check.yml

  required-status-check:
    needs:
      - build
      - test-declarative-configuration-run
    runs-on: ubuntu-latest
    if: always()
    steps:
      - if: >
          needs.build.result != 'success' ||
          needs.test-declarative-configuration-run.result != 'success'
        run: exit 1